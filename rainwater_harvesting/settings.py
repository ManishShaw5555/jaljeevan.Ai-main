"""
Django settings for rainwater_harvesting project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path 
from decouple import config
import os
import matplotlib
matplotlib.use('Agg')  # Set non-GUI backend globally

# Your other settings...


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

# SECURITY WARNING: don't run with debug turned on in production!

SECRET_KEY = config('SECRET_KEY', default='your-secret-key-here')
DEBUG = config('DEBUG', default=True, cast=bool)
ALLOWED_HOSTS = ['localhost', '127.0.0.1', '*']
GEMINI_API_KEY = "AIzaSyAeV7pKkw41E9GclxTl7g8scmoTvpvFH6M"
if not GEMINI_API_KEY:
    raise ValueError("GEMINI_API_KEY environment variable is required")

GOOGLE_TRANSLATE_API_KEY = '"-----BEGIN PRIVATE KEY-----\nMIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQDlSBItGCFf+D/e\nax1OCU6JTRWqXrfDx1dqq5xg/ty9jyJP8Ok7o1rMQQU4u4MvqwU4+UO5z4dT4/pE\n+CnMxtWTIzAiYnh4eGnvX5cRnjrKFcukTZ2VjiDcwBQG+ZSVRfPYK5Jq8Zux9pBc\n4YAQwfMgGn4wtdItulLtIqxcs/LMY3yssVNw59thUuH1HyA/1UCV7GoKPUW1PQIT\nSjiCIAkeVQVo40k8meGAlVa/UNaqw55RNgIaZ/5AZ1tTE3uQilAhlcGKOKMsd1gK\nvjzfsI5wYrW0fxj8z2NBvpDjJfZ+CDgLWvJYWvS9xrcjcO238RpPrkNBkdIautr0\nL3ImdQzXAgMBAAECggEAKY98V/c5SYOe1CrXZ4dRWJsD89tydQcDxf6wfHaGPcgd\nwJ7bMCfGtCKPFz8KIxBdhHvOdnZzQdYfzfOr5AYgvaiRt5Hg43l0PmM154gmgO4d\neT1mdK8MLueUWcVQ1RQWhNc1FbSQ89vNREDN7Xuynd2fhSXYINjW4kw4MR+fQcPp\nABGbBgBbBDKfiNmXHGxIj1+iccF+inq12xS+Aky0kVdsXojGxig3u7VLThftaNIA\n7AwEkZcNiU9yYJoWJGxiB38I8hiD6J7ZN5ln6rB0BsiTr92qY/oH8ORyVTEXh0Yz\nSNhks78iF1wq7cmwINxav8IPoBUj6tZiZsyJYSe3RQKBgQD4YRjXyIYAuPlGlmqo\njNpZaPjqWOdEOiX/eO5CfXU+IiOhkMgb2RZ4yMn0PwpwA+Tn/UMdVx94pyLDhE1J\nOcokZlTbIFZUUGAXGPa5HMPVjuAfJoPo+yERjqGd34HGa1XAdnPbvgJNIwyzbX8t\nYCLPwZ899UsQVtd8R8IRUF1AIwKBgQDsUPhSztRedyNh/o7ivIHhT4jHFt5rgYyk\nlgPMk8N1nWgZqP7M6Xo1rdO+62TJOcmAhyb6D/nlHCwQu6OKFtKmlsz+/8CgL3uU\n+o7nON6BaCPKnre9+9/+N7jFQBnKakJwiK4e3T1+qPnnORJpaQvFLmSLFhr9STh5\nrqMvILIxvQKBgQCaZLDuoUU6+cBqMmIGd9fasDfaZH0Nmh+4mFFyn03b25jOe5MI\nTH99gUKYQv+X9bO6yWGIwXlcpHgllP39wKB40+t3crh3HKc+dFQZaVoKTA/hDS3+\nCuzZXxHzctXWoy3gv0DxnUEM9faVKkFd0V6SSkdUWj/Y3kKAjJKD9LKihQKBgQDd\npdBT8vSTqdEBD767Aa4cQvn6KgPx96+Pi7kCf7F7tmi2cKCUV4Stpl2Nm8GLT20k\n5R70ullbwAHArA3m7iMj5xtdLUphtEeIYz33t4pS+/deC2IxinX8Pg1KzSWjiejJ\nHhmaj04nZ5wFeK1BOyq0BiB9p/0mhi+3Scp64ILiTQKBgQDDsdPTyPyjt7ViepNo\nJPum17ONxgXMbTyp82pk6zY2mEoios1Srw62NfGGz6k5zcupt8LDkgjh0GgNTu/m\nuXhovexhxtQN4OOih0DkxElRNmuv97qYjgGshaJ6hLIV/ZOq7+f3qUnODP1bWRSR\nCqidWziZXOGdK/q8+QK8FFdLwA==\n-----END PRIVATE KEY-----\n"'

# Application definition

INSTALLED_APPS = [
    "django_browser_reload",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'calculator',
    'accounts.apps.AccountsConfig',
    'pages',
    'chatbot',
    'vendorRegistration',
    'translations',
    'GovtApplications',
]

MIDDLEWARE = [
    "django_browser_reload.middleware.BrowserReloadMiddleware",
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'rainwater_harvesting.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'rainwater_harvesting.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# REST Framework Configuration
REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20
}

# CORS Settings
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
    "http://localhost:8080",
    "http://127.0.0.1:8080",
]

CORS_ALLOW_ALL_ORIGINS = DEBUG  # Only in development

# Logging Configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs' / 'django.log',
            'formatter': 'verbose',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
    'loggers': {
        'django': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': False,
        },
        'calculator': {
            'handlers': ['file', 'console'],
            'level': 'DEBUG',
            'propagate': False,
        },
    },
}

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)

# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Create logs directory if it doesn't exist
LOG_DIR = BASE_DIR / 'logs'
LOG_DIR.mkdir(exist_ok=True)
# https://docs.djangoproject.com/en/5.2/howto/static-files/



# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
